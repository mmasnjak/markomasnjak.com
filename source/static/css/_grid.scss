$default-float: left;
$opposite-direction: right;

@function grid-calc($colNumber, $totalColumns) {
  $result: percentage(($colNumber / $totalColumns));
  @if $result == 0% { $result: 0; }
  @return $result;
}

@mixin clearfix {
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}

@mixin grid-row($behavior: false) {

  @if $behavior == nest {
    margin: 0 (-($column-gutter/2));
    max-width: none;
    width: auto;
  }

  @else if $behavior == collapse {
    margin: 0;
    max-width: $row-width;
    width: 100%;
  }

  @else if $behavior == nest-collapse {
    margin: 0;
    max-width: none;
    width: auto;
  }

  @else {
    margin: 0 auto;
    max-width: $row-width;
    width: 100%;
  }

  @include clearfix();
}

@mixin grid-column(
  $columns: false,
  $last-column: false,
  $center: false,
  $offset: false,
  $push: false,
  $pull: false,
  $collapse: false,
  $float: true,
  $position: false) {

  @if $position or $push or $pull {
    position: relative;
  }

  @if $collapse {
    padding-left: 0;
    padding-right: 0;
  }

  @else if $collapse == false {
    padding-left: ($column-gutter / 2);
    padding-right: ($column-gutter / 2);
  }

  @if $columns {
    width: grid-calc($columns, $total-columns);

    @if $last-column { float: $opposite-direction; }
  }

  @if $push { #{$default-float}: grid-calc($push, $total-columns); #{$opposite-direction}: auto; }
  @if $pull { #{$opposite-direction}: grid-calc($pull, $total-columns); #{$default-float}: auto; }

  @if $float and $last-column == false {
    @if $float == left or $float == true { float: $default-float; }
    @else if $float == right { float: $opposite-direction; }
    @else { float: none; }
  }

  @if $center {
    margin-#{$default-float}: auto;
    margin-#{$opposite-direction}: auto;
    float: none;
  }

  @if $offset { margin-#{$default-float}: grid-calc($offset, $total-columns) !important; }
}